@using Songify.Models.SongModels
@using Microsoft.AspNetCore.Identity
@using Songify.Entities
@inject UserManager<SongifyUser> UserManager
@inject SignInManager<SongifyUser> SignInManager
@model IEnumerable<SongAllViewModel>

@{
    ViewData["Title"] = "All Songs";
}

<h1>All Songs</h1>
<form class="d-flex" action="@Url.Action(ViewData["Action"]?.ToString(), ViewData["Controller"]?.ToString())" method="get">
    <input class="form-control me-2" type="search" placeholder="Search..." aria-label="Search" name="searchString" />
    <button class="btn btn-outline-success" type="submit">Search</button>
</form>

@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
    <a asp-action="Create" class="add">Add Song</a>
}

<div class="container">
    @foreach (var song in Model)
    {
        <div class="card">
            <h5>@song.Title</h5>
            <p><strong>Duration:</strong> @song.Duration seconds</p>
            <p><strong>Album:</strong> @song.AlbumName</p>
            <p><strong>Band:</strong> @song.BandName</p>
            @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
            {
                <div class="admin-actions">
                    <a asp-action="Edit" asp-route-id="@song.Id">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@song.Id">Delete</a>
                </div>
            }
        </div>
    }
</div>
